#+BEGIN_COMMENT
.. title: Statement to Question
.. slug: statement-to-question
.. date: 2019-05-28 15:33:15 UTC-07:00
.. tags: nlp,parts-of-speech
.. category: NLP
.. link: 
.. description: Converting a statement to a question with Natural-Language-Processing
.. type: text
.. status: 
.. updated: 

#+END_COMMENT
#+OPTIONS: ^:{}
#+OPTIONS: H:5
#+TOC: headlines 2
#+BEGIN_SRC ipython :session nlp :results none :exports none
%load_ext autoreload
%autoreload 2
#+END_SRC
* Beginning
** Imports
*** Python
#+BEGIN_SRC ipython :session nlp :results none
from pathlib import Path
#+END_SRC
*** PyPi
#+BEGIN_SRC ipython :session nlp :results none
from spacy import displacy
import spacy
#+END_SRC
*** My Projects
#+BEGIN_SRC ipython :session nlp :results none
from graeae import EnvironmentLoader, TextDownloader
from graeae.timers import Timer
#+END_SRC

** The Text File.
This is the URL to Joseph Conrad's "The Secret Agent" from [[https://www.gutenberg.org/ebooks/974][Project Gutenberg]].
#+BEGIN_SRC ipython :session nlp :results none
URL = "https://www.gutenberg.org/files/974/974-0.txt"
environment = EnvironmentLoader()
path = environment["GUTENBERG"]
#+END_SRC

#+BEGIN_SRC ipython :session nlp :results output :exports both
path = Path(path).expanduser()
downloader = TextDownloader(url=URL, target=path/"conrad_joseph_secret_agent.txt")
text = downloader.download
#+END_SRC

#+RESULTS:
: 2019-05-29 12:42:49,006 [1mTextDownloader[0m download: /home/brunhilde/data/datasets/gutenberg/conrad_joseph_secret_agent.txt exists, opening it
** The spaCy Model
#+BEGIN_SRC ipython :session nlp :results none
nlp = spacy.load("en_core_web_lg")
#+END_SRC
** The Output Path
#+BEGIN_SRC ipython :session nlp :results none
SLUG = "statement-to-question"
OUTPUT_PATH = Path("../../files/posts/nlp/" + SLUG)
if not OUTPUT_PATH.is_dir():
    OUTPUT_PATH.mkdir()
#+END_SRC
* Middle
** Chunking Express
   spaCy will pull out [[https://spacy.io/usage/linguistic-features#noun-chunks][noun-chunks]] for you - phrases that have a noun and words that refer to it.

#+BEGIN_SRC ipython :session nlp :results none
document = nlp(text)
sentence = list(document.sents)[101]
#+END_SRC

#+BEGIN_SRC ipython :session nlp :results output :exports both
print(sentence)
#+END_SRC

#+RESULTS:
: The mean aspect of the shop surprised her.  


#+BEGIN_SRC ipython :session nlp :results output :exports both
for index in range(100, 103):
    sentence = list(document.sents)[index]
    print(f"Sentence: {sentence}\n")
    for chunk in sentence.noun_chunks:
        print(f"noun chunk: {chunk}")
        for token in chunk:
            print(f"{token} - POS: {token.pos_} Tag: {token.tag_}")
        print()
    print()
#+END_SRC

#+RESULTS:
#+begin_example
Sentence: The married couple took her over with the
furniture.  

noun chunk: The married couple
The - POS: DET Tag: DT
married - POS: ADJ Tag: JJ
couple - POS: NOUN Tag: NN

noun chunk: her
her - POS: PRON Tag: PRP

noun chunk: the
furniture
the - POS: DET Tag: DT

 - POS: SPACE Tag: _SP
furniture - POS: NOUN Tag: NN


Sentence: The mean aspect of the shop surprised her.  

noun chunk: The mean aspect
The - POS: DET Tag: DT
mean - POS: ADJ Tag: JJ
aspect - POS: NOUN Tag: NN

noun chunk: the shop
the - POS: DET Tag: DT
shop - POS: NOUN Tag: NN

noun chunk: her
her - POS: PRON Tag: PRP


Sentence: The change from
the Belgravian square to the narrow street in Soho

noun chunk: The change
The - POS: DET Tag: DT
change - POS: NOUN Tag: NN

noun chunk: the narrow street
the - POS: DET Tag: DT
narrow - POS: ADJ Tag: JJ
street - POS: NOUN Tag: NN

noun chunk: Soho
Soho - POS: PROPN Tag: NNP


#+end_example

The =pos_= is the [[https://universaldependencies.org/u/pos/][Universal Part-of-Speech tag]] while the =tag_= is the [[https://catalog.ldc.upenn.edu/LDC2013T19][OntoNotes]] English-specific tag.

** Visualizing Dependencies
#+BEGIN_SRC ipython :session nlp :results none
svg = displacy.render(sentence, style="dep", jupyter=False)
save_path = OUTPUT_PATH/"dependency_plot.svg"
with save_path.open("w") as writer:
    writer.write(svg)
#+END_SRC

[[file:dependency_plot.svg]]

* End
